{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green41\blue57;\red255\green0\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16020\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include<stdio.h>\
#include<string.h>\
//#include<stdlib.h>\
#define MAXSIZE 20\
\
//Create the Parsing Table \
char PrsTable[6][7][10] = \{\
	"NT",  "<id>",   "+",     "*",     "(",    ")",      "$",\
	"E" ,  "TH",    "Error", "Error", "TH",    "Error",  "Error",\
        "H",  "Error",  "+TH",  "Error",  "Error", " ",      " ",\
        "T",   "FU",    "Error", "Error", "FU",    "Error",  "Error",\
        "U",  "Error",  " ",     "*FU",   "Error", " ",      " ",\
	"F",   "i",     "Error", "Error", "(E)",   "Error",  "Error"  \
\};\
\
//\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
void ParsingTable_View();\
void parse(char []);\
char * strrev(char []);\
void push(char []);        \
char TOS();       //read only the Top Symbol\
void pop();\
void display();   // Display the Stack Content\
void display1(char [], int); // Display the Content From Input Buffer\
\
\
\
//\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
int main(int argc, char *argv[])\{\
 \
char ip[30];    .\
     .\
     .\
 ParsingTable_View();\
 \
\
 \cf2 printf("Enter The String To Be Parsed:");\
 scanf("%s", string);\cf0 \
\
/*\
  \cf3  yyin = fopen(argv[1], \'93r\'94);\
   i= 0;\
   while(!feof(yyin))\
     \{\
        token = yylex();\
        if ( token >= id_min  && token <= id_max )\
             ip[i] =  \'91i\'92;\
       else\
             ip[i] = token;\
       i++;   \
     \}   \
    ip[i] = \'91$\'92;\cf0 \
 \
\
   \
\
*/\
\
\
printf(\'93Start Parse ........ ...... \\n");\
parse(ip);\
\
   .\
   .\
   .\
\
\}\
\
//\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
void parse(char ip[])\
\{\
  int j = 0, ir, ic;\
  char an,st,r[20];\
\
  push("$E");\
  display(); \
  printf("          ");\
  display1(ip,j);\
  printf("\\n");\
\
  for (j = 0; ip[j]!='\\0';)\
  \{\
 \
  //read the top and left most symbol from the input buffer\
      an = ip[j];        \
      st = TOS();\
\
//     printf("st ==== %c ==== an=== %c", st,an);\
\
     if (st == 'E') ir = 1;\
     else if(st == 'H') ir = 2;\
     else if(st == 'T')  ir = 3;\
          .\
          .\
          .\
          .\
    \
    if (an =='i')ic=1;\
    else if(an = '+')ic=2;\
    else if(an = '*')ic=3;\
         .\
         .\
         .\
    \
    if (TOS()=='$' && an == '$') \{printf("Accept");break;\}\
\
    else if(st  == an)\
              \{\
                pop();\
              	display();\
                printf("*****=");\
                display1(ip,j+1);\
                st=TOS();\
                printf("==========>"); display();\
                printf("\\n");             \
                j++;     \
              \}\
    else if((st == 'E' || st == 'H' || st == 'T' || st == 'U' || st == 'F') && (strcmp(PrsTable[ir][ic], " ")!=0 ))\
          \{\
           // printf("TOP is NT \\n");         \
            pop();\
            strrev(PrsTable[ir][ic]);\
            push(rev);\
            display(); \
            printf("**********Stk");\
            display1(ip,j);\
          printf("st=%c %c----- rev =%s",st,TOS(),rev);\
            st = TOS();   \
            printf("\\n");\
          \}\
    else if(strcmp(PrsTable[ir][ic], " ")==0)\
          \{\
            pop();\
            display(); \
            printf("**********P");\
            display1(ip,j);   \
            printf("\\n");\
          \}\
      else\
              \{\
                 printf("Syntax Error");\
                 break;\
                \}  \
    \}\
\}\
\
%\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
void push(char k[])\
\{\
   int i;\
	for (i=0;k[i]!='\\0';i++)\
	\{\
		if (top < 9)\
			a[++top]=k[i];\
	\}\
\}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}